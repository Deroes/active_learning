function [estimated_proportions proportion_variances in_train] = ...
      optimal_sampling_estimate(data, responses, in_train, ...
                                prior_covariances, num_evaluations, ...
                                inference_method, mean_function, ...
                                covariance_function, likelihood, ...
                                hypersamples, num_f_samples)
  
  estimated_proportions = zeros(num_evaluations, 1);
  proportion_variances = zeros(num_evaluations, 1);
  
  for i = 1:num_evaluations
    tic
    
    [means variances hypersample_weights] = ...
        estimate_latent_posterior(data, responses, in_train, ...
              prior_covariances, inference_method, mean_function, ...
              covariance_function, likelihood, hypersamples, false);
    
    posterior_means = means * hypersample_weights;
    posterior_variances = ...
        (variances + means.^2) * hypersample_weights - posterior_means.^2;
    
    test_ind = find(~in_train);
    num_test = numel(test_ind);

    probabilities = exp(likelihood([], ones(num_test, 1), ...
              posterior_means, posterior_variances));
    
    utilities = zeros(num_test, 1);
    
    parfor j = 1:num_test
      this_probability = probabilities(j);
      
      fake_in_train = in_train;
      fake_in_train(test_ind(j)) = true;
      
      fake_responses = responses;
      fake_responses(test_ind(j)) = 1;
      
      [means covariances hypersample_weights] = ...
          estimate_latent_posterior(data, fake_responses, fake_in_train, ...
                prior_covariances, inference_method, mean_function, ...
                covariance_function, likelihood, hypersamples, true);
      
      [~, proportion_variance_true] = ...
          estimate_proportion(means, covariances, hypersample_weights, ...
                num_f_samples);
      
      fake_responses(test_ind(j)) = -1;

      [means covariances hypersample_weights] = ...
          estimate_latent_posterior(data, fake_responses, fake_in_train, ...
                prior_covariances, inference_method, mean_function, ...
                covariance_function, likelihood, hypersamples, true);
      
      [~, proportion_variance_false] = ...
          estimate_proportion(means, covariances, hypersample_weights, ...
                num_f_samples);

      utilities(j) = this_probability * proportion_variance_true + ...
          (1 - this_probability) * proportion_variance_false;
    end
    
    [~, best_ind] = min(utilities);
    in_train(test_ind(best_ind)) = true;
    
    [means covariances hypersample_weights] = ...
        estimate_latent_posterior(data, responses, in_train, ...
                                  prior_covariances, inference_method, ...
                                  mean_function, covariance_function, ...
                                  likelihood, hypersamples, true);
    
    [estimated_proportion proportion_variance] = ...
        estimate_proportion(means, covariances, hypersample_weights, num_f_samples);
    
    num_train = sum(in_train);
    
    estimated_proportions(i) = ...
        num_train / (num_train + num_test) * (mean(responses(in_train) == 1)) + ...
        num_test  / (num_train + num_test) * estimated_proportion;
    
    proportion_variances(i) = ...
        num_test  / (num_train + num_test) * proportion_variance;
    
    elapsed = toc;
    disp(['optimal sampling: ' num2str(i) ...
          ' of ' num2str(num_evaluations) ...
          ', current estimate: ' num2str(estimated_proportions(i)) ...
          ' +/- ' num2str(sqrt(proportion_variances(i))) ...
          ', took: ' num2str(elapsed) 's.']);
  end
 
end