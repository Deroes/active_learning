function [estimated_proportions proportion_variances in_train] = ...
      uncertainty_sampling_estimate(data, responses, in_train, ...
            prior_covariances, num_evaluations, inference_method, ...
            mean_function, covariance_function, likelihood, hypersamples, ...
            num_f_samples)
  
  estimated_proportions = zeros(num_evaluations, 1);
  proportion_variances = zeros(num_evaluations, 1);
  
  for i = 1:num_evaluations
    tic;
    [means variances hypersample_weights] = estimate_latent_posterior(data, ...
        responses, in_train, prior_covariances, inference_method, ...
        mean_function, covariance_function, likelihood, hypersamples, false);

    posterior_means = means * hypersample_weights;
    posterior_variances = ...
      (variances + means.^2) * hypersample_weights - posterior_means.^2;
    
    test_ind = find(~in_train);
    num_test = numel(test_ind);

    probabilities = exp(likelihood([], ones(num_test, 1), ...
      posterior_means, posterior_variances));

    [~, best_ind] = min(abs(probabilities - 1/2));

    in_train(test_ind(best_ind)) = true;
    
    elapsed = toc;

    [means covariances hypersample_weights] = estimate_latent_posterior(data, ...
        responses, in_train, prior_covariances, inference_method, ...
        mean_function, covariance_function, likelihood, hypersamples, true);

    [estimated_proportion proportion_variance] = ...
        estimate_proportion(means, covariances, hypersample_weights, num_f_samples);
    
    num_train = sum(in_train);
    
    estimated_proportions(i) = ...
        num_train / (num_train + num_test) * (mean(responses(in_train) == 1)) + ...
        num_test  / (num_train + num_test) * estimated_proportion;
    
    proportion_variances(i) = ...
        num_test  / (num_train + num_test) * proportion_variance;
    
    disp(['uncertainty sampling: ' num2str(i) ...
          ' of ' num2str(num_evaluations) ...
          ', current estimate: ' num2str(estimated_proportions(i)) ...
          ' +/- ' num2str(sqrt(proportion_variances(i))) ...
          ', took: ' num2str(elapsed) 's.']);
  end

end